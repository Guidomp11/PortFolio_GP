{"version":3,"sources":["components/Error.jsx","hooks/useMoneda.js","hooks/useCriptomonedas.js","components/Formulario.jsx","components/Cotizacion.jsx","components/Spinner/Spinner.jsx","cryptomonedas.png","App.js","reportWebVitals.js","index.js"],"names":["MensajeError","styled","p","Error","mensaje","Label","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","hidden","map","opcion","codigo","nombre","useCriptomonedas","CoinInfo","Name","FullName","id","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listadocripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","useCriptomoneda","criptomoneda","SelectCripto","useEffect","a","Axios","get","resultado","data","Data","consultarAPI","onSubmit","preventDefault","type","ResultadoDiv","div","Info","Precio","Cotizacion","cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","class","Contenedor","Imagen","img","Heading","h1","App","guardarCotizacion","cargando","guardarCarga","url","setTimeout","DISPLAY","cotizarCriptomoneda","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6455487b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styled from '@emotion/styled';\r\n\r\nconst MensajeError = styled.p`\r\n    background-color: #b7322c;\r\n    padding: 1rem;\r\n    color: #FFF;\r\n    font-size: 30px;\r\n    text-transofrm: uppercase;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    font-family: 'bebas Neue', cursive;\r\n`;\r\n\r\nconst Error = ({mensaje}) => {\r\n    return (  \r\n        <MensajeError>{mensaje}</MensajeError>\r\n    );\r\n}\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Error;","import React, {Fragment, useState} from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst useMoneda = (label, stateInicial, opciones) => {\r\n\r\n    //state del custom hook\r\n    const [state, actualizarState] = useState(stateInicial);\r\n\r\n    const Seleccionar = () => (\r\n        <Fragment>\r\n            <Label>{label}</Label>\r\n            <Select\r\n                onChange={e => actualizarState(e.target.value)}\r\n                value={state}\r\n            >\r\n                <option value=\"\" hidden>- Seleccione -</option>\r\n                {opciones.map(opcion => (\r\n                    <option value={opcion.codigo} key={opcion.codigo}>{opcion.nombre}</option>\r\n                ))}\r\n                \r\n            </Select>\r\n        </Fragment>\r\n    )\r\n\r\n    //retornar state, interfaz, fn que modifica el state\r\n    return [state, Seleccionar, actualizarState];\r\n}\r\n\r\nexport default useMoneda;","import React, {Fragment, useState} from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Label = styled.label`\r\n    font-family: 'Bebas Neue', cursive;\r\n    color: #FFF;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 2.4rem;\r\n    margin-top: 2rem;\r\n    display: block;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    width: 100%;\r\n    display: block;\r\n    padding: 1rem;\r\n    -webkit-appearance: none;\r\n    border-radius: 10px;\r\n    border: none;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nconst useCriptomonedas = (label, stateInicial, opciones) => {\r\n\r\n    //state del custom hook\r\n    const [state, actualizarState] = useState(stateInicial);\r\n\r\n    const Seleccionar = () => (\r\n        <Fragment>\r\n            <Label>{label}</Label>\r\n            <Select\r\n                onChange={e => actualizarState(e.target.value)}\r\n                value={state}\r\n            >\r\n                <option value=\"\" hidden>- Seleccione -</option>\r\n                {opciones.map(opcion => (\r\n                    <option value={opcion.CoinInfo.Name} key={opcion.CoinInfo.id}>{opcion.CoinInfo.FullName}</option>\r\n                ))}\r\n                \r\n            </Select>\r\n        </Fragment>\r\n    )\r\n\r\n    //retornar state, interfaz, fn que modifica el state\r\n    return [state, Seleccionar, actualizarState];\r\n}\r\n\r\nexport default useCriptomonedas;","import React, {useEffect, useState} from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport useMoneda from '../hooks/useMoneda';\r\nimport useCriptomoneda from '../hooks/useCriptomonedas';\r\n\r\nimport styled from '@emotion/styled';\r\nimport Axios from 'axios';\r\n\r\nconst Boton = styled.input`\r\n    margin-top: 20px;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    background-color: #66a2fe;\r\n    border: none;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    color: #FFF;\r\n    transition: background-color .3s ease;\r\n    \r\n    &:hover {\r\n        background-color: #326AC0;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Formulario = ({guardarMoneda, guardarCriptomoneda}) => {\r\n\r\n    //state dewl listado de criptomonedas\r\n    const [listadocripto, guardarCriptomonedas] = useState([]);\r\n    const [error, guardarError] = useState(false);\r\n    \r\n    const MONEDAS = [\r\n        {codigo: 'USD', nombre: 'Dolar de Estados Unidos'},\r\n        {codigo: 'MXN', nombre: 'Peso Mexicano'},\r\n        {codigo: 'EUR', nombre: 'Euro'},\r\n        {codigo: 'GBP', nombre: 'Libra Esterlina'}\r\n    ];\r\n\r\n    const [moneda, SelectMonedas] = useMoneda('Elige tu moneda', '', MONEDAS); \r\n    const [criptomoneda, SelectCripto] = useCriptomoneda('Elige tu criptomoneda', '', listadocripto);\r\n\r\n    //ejecutar llamado a la API\r\n    useEffect(() => {\r\n        const consultarAPI = async () => {\r\n            const url = 'https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD';\r\n            const resultado = await Axios.get(url);\r\n\r\n            guardarCriptomonedas(resultado.data.Data);\r\n        }\r\n        consultarAPI();        \r\n    }, []);\r\n\r\n    //caundo se hace submit\r\n    const cotizarMoneda = e => {\r\n        e.preventDefault();\r\n\r\n        if(moneda === '' || criptomoneda === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n        guardarMoneda(moneda);\r\n        guardarCriptomoneda(criptomoneda);\r\n    }\r\n\r\n    return (  \r\n        <form\r\n            onSubmit={cotizarMoneda}\r\n        >\r\n            {error ? <Error mensaje=\"Todos los campos son obligatorios\"/> : null}\r\n            <SelectMonedas />\r\n            <SelectCripto />\r\n\r\n            <Boton \r\n                type=\"submit\"\r\n                value=\"Calcular\"\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarMoneda: PropTypes.func.isRequired, \r\n    guardarCriptomoneda: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ResultadoDiv = styled.div`\r\n    color: #FFF;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n`;\r\n\r\nconst Info = styled.p`\r\n    font-size: 18px;\r\n    span {\r\n        font-weight:bold;\r\n    }\r\n`;\r\nconst Precio = styled.p`\r\n    font-size: 30px;\r\n    span {\r\n        font-weight:bold;\r\n    }\r\n`;\r\n\r\nconst Cotizacion = ({cotizacion}) => {\r\n\r\n    if(Object.keys(cotizacion).length === 0) return null;\r\n\r\n    return (  \r\n        <ResultadoDiv>\r\n            <Precio>El precio es: <span>{cotizacion.PRICE}</span></Precio>\r\n            <Info>El precio más alto del día: <span>{cotizacion.HIGHDAY}</span></Info>\r\n            <Info>El precio más bajo del día: <span>{cotizacion.LOWDAY}</span></Info>\r\n            <Info>Variación últimas 24hs: <span>{cotizacion.CHANGEPCT24HOUR}</span></Info>\r\n            <Info>Última Actualización: <span>{cotizacion.LASTUPDATE}</span></Info>\r\n        </ResultadoDiv>\r\n    );\r\n}\r\n\r\nCotizacion.propTypes = {\r\n    cotizacion: PropTypes.object.isRequired\r\n}\r\n \r\nexport default Cotizacion;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div class=\"sk-chase\">\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n            <div class=\"sk-chase-dot\"></div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React, {useState, useEffect} from 'react';\nimport Formulario from './components/Formulario';\nimport Cotizacion from './components/Cotizacion';\nimport Spinner from './components/Spinner/Spinner';\nimport Axios from 'axios';\n\nimport styled from '@emotion/styled';\nimport imagen from './cryptomonedas.png';\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n\n  @media (min-width: 992px){\n    display:grid;\n    grid-template-columns: repeat(2, 1fr);\n    column-gap: 2rem;\n  }\n`;\n\nconst Imagen = styled.img`\nmax-width: 100%;\nmargin-top: 5rem;`;\n\nconst Heading = styled.h1`\n  font-family: 'Bebas Neue', cursive;\n  color: #FFF;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after {\n    content: '';\n    width: 100px;\n    height: 6px;\n    background-color: #66A2FE;\n    display:block;\n  }\n`;\n\nfunction App() {\n\n  const [moneda, guardarMoneda] = useState('');\n  const [criptomoneda, guardarCriptomoneda] = useState('');\n  const [cotizacion, guardarCotizacion] = useState({});\n  const [cargando, guardarCarga] = useState(false);\n\n  useEffect(() => {\n\n    const cotizarCriptomoneda = async () => {\n      if(moneda === '') return;\n\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n      const resultado = await Axios.get(url);\n      \n      guardarCarga(true);\n      setTimeout(() => {\n        guardarCotizacion(resultado.data.DISPLAY[criptomoneda][moneda]);\n      \n        guardarCarga(false);\n      }, 3000);\n      \n    }\n\n    cotizarCriptomoneda();\n    \n  }, [moneda, criptomoneda]);\n\n  //mostrar spinner o resultado\n  const componente = (cargando) ? <Spinner /> : <Cotizacion cotizacion={cotizacion}/>\n\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen \n          src={imagen}\n          alt=\"Imagen cripto\"\n        />\n      </div>\n      <div>\n        <Heading>\n          Cotiza criptomonedas al Instante\n        </Heading>\n\n        <Formulario \n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n\n        {componente}\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}