{"version":3,"sources":["components/Header.jsx","helper.js","components/Formulario.jsx","components/Resumen.jsx","components/Resultado.jsx","components/Spinner/Spinner.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primerMayuscula","text","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","Radio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerDatos","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","parseFloat","calcularPlan","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","TextoCotizacion","ResultadoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.761e66c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: 'Salbo 27px', sans-serif;\r\n    text-align: center;\r\n`;\r\n\r\nconst Header = ({titulo}) => {\r\n    return ( \r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","export function obtenerDiferenciaYear(year){\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\nexport function calcularMarca(marca){\r\n    let incremento;\r\n\r\n    switch(marca){\r\n        \r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n}\r\n\r\nexport function calcularPlan(plan){\r\n    return (plan === 'basico') ? 1.20 : 1.50;\r\n}\r\n\r\nexport function primerMayuscula(text){\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n}","import React, {useState} from 'react';\r\nimport {obtenerDiferenciaYear, calcularMarca, calcularPlan} from '../helper';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styled from '@emotion/styled';\r\n\r\nconst Campo = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    dispaly: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    -webkit-appearance: none;\r\n`;\r\n\r\nconst Radio = styled.input`\r\n    margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n    margin-top: 2rem;\r\n\r\n    &:hover{\r\n        cursor: pointer;\r\n        background-color: #26C6DA;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    width: 100%;\r\n    text-align: center;\r\n`;\r\n\r\nconst Formulario = ({guardarResumen, guardarCargando}) => {\r\n\r\n    const [datos, guardarDatos] = useState({\r\n        marca: '',\r\n        year: '',\r\n        plan: ''\r\n    });\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //extraer los valores del state\r\n    const {marca, year, plan} = datos;\r\n\r\n    //leer los datos del formulario y colocarlos en el state\r\n    const obtenerDatos = e => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name] : e.target.value\r\n        });\r\n    }\r\n\r\n    //cuando el usuario presiona submit\r\n    const cotizarSeguro = e => {\r\n        e.preventDefault();\r\n\r\n        if(marca.trim() === '' || year.trim() === '' || plan.trim() === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        //una base de 2000\r\n        let resultado = 2000;\r\n\r\n        //obtener la diferencia de años\r\n        const diferencia = obtenerDiferenciaYear(year);\r\n\r\n        //por cada año hay que restar el 3%\r\n        resultado -= ((diferencia * 3) * resultado / 100);\r\n\r\n        //Americano 15%\r\n        //Asiatico 5%\r\n        //Europeo 30%\r\n        resultado = calcularMarca(marca) * resultado;\r\n\r\n        //Basico aumenta 20%\r\n        //Completo aumenta 50%\r\n        resultado = parseFloat(calcularPlan(plan) * resultado).toFixed(2);\r\n\r\n        //mostramos spinner\r\n        guardarCargando(true);\r\n        setTimeout(() => {\r\n            //eliminamos spinner\r\n            guardarCargando(false);\r\n\r\n            //mandamos data\r\n            guardarResumen({\r\n                cotizacion: Number(resultado),\r\n                datos\r\n            });\r\n        }, 3000);\r\n\r\n        \r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={cotizarSeguro}\r\n        >\r\n\r\n            {error ? <Error>Todos los campos son obligatorios</Error> : null}\r\n\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name=\"marca\"\r\n                    value={marca}\r\n                    onChange={obtenerDatos}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"americano\">Americano</option>\r\n                    <option value=\"europeo\">Europeo</option>\r\n                    <option value=\"asiatico\">Asiatico</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Año</Label>\r\n                <Select\r\n                    name=\"year\"\r\n                    value={year}\r\n                    onChange={obtenerDatos}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Campo>\r\n\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <Radio \r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"basico\"\r\n                    checked={plan === 'basico'}\r\n                    onChange={obtenerDatos}\r\n                /> Basico\r\n                <Radio \r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"completo\"\r\n                    checked={plan === 'completo'}\r\n                    onChange={obtenerDatos}\r\n                /> Completo\r\n            </Campo>\r\n\r\n            <Boton type=\"submit\">Cotizar</Boton>\r\n        </form>\r\n    );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarResumen: PropTypes.func.isRequired,\r\n    guardarCargando: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {primerMayuscula} from '../helper';\r\nimport styled from '@emotion/styled';\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #FFF;\r\n    margin-top: 1rem;\r\n`;\r\n\r\nconst Resumen = ({datos}) => {\r\n\r\n    const {marca, year, plan} = datos;\r\n    if(marca === '' || year === '' || plan === '') return null;\r\n\r\n    return ( \r\n        <ContenedorResumen>\r\n            <h2>Resumen de Cotizacion</h2>\r\n            <ul>\r\n                <li>Marca: {primerMayuscula(marca)}</li>\r\n                <li>Año: {year}</li>\r\n                <li>Plan:  {primerMayuscula(plan)}</li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n    );\r\n}\r\n \r\nResumen.propTypes = {\r\n    datos: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Resumen;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styled from '@emotion/styled';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n    color: #00838F;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding: .5rem;\r\n    border: 1px solid #26C6DA;\r\n    background-color: rgb(127, 224, 267);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`;\r\n\r\nconst Resultado = ({cotizacion}) => {\r\n    \r\n    \r\n    return ( \r\n    (cotizacion === 0)\r\n        ? <Mensaje>Elige marca, año y tipo de seguro.</Mensaje> \r\n        : \r\n            (\r\n                <ResultadoCotizacion>\r\n                    <TransitionGroup\r\n                        component=\"span\"\r\n                        className=\"resultado\"\r\n                    >\r\n                        <CSSTransition\r\n                            classNames=\"resultado\"\r\n                            key={cotizacion}\r\n                            timeout={{enter: 500, exit: 500}}\r\n                        >\r\n                            <TextoCotizacion>El total es: $ <span>{cotizacion}</span></TextoCotizacion>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                </ResultadoCotizacion>\r\n            )\r\n    );\r\n}\r\n \r\nResultado.propTypes = {\r\n    cotizacion: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Resultado;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return ( \r\n        <div className=\"sk-cube-grid\">\r\n            <div className=\"sk-cube sk-cube1\"></div>\r\n            <div className=\"sk-cube sk-cube2\"></div>\r\n            <div className=\"sk-cube sk-cube3\"></div>\r\n            <div className=\"sk-cube sk-cube4\"></div>\r\n            <div className=\"sk-cube sk-cube5\"></div>\r\n            <div className=\"sk-cube sk-cube6\"></div>\r\n            <div className=\"sk-cube sk-cube7\"></div>\r\n            <div className=\"sk-cube sk-cube8\"></div>\r\n            <div className=\"sk-cube sk-cube9\"></div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Spinner;","import React, {useState} from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport Resumen from './components/Resumen';\nimport Resultado from './components/Resultado';\nimport Spinner from './components/Spinner/Spinner';\nimport styled from '@emotion/styled';\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #FFF;\n  padding: 3rem;\n`;\n\nfunction App() {\n\n  const [resumen, guardarResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const [cargando, guardarCargando] = useState(false);\n\n  const {cotizacion, datos} = resumen;\n\n  return (\n    <Contenedor>\n      <Header titulo='Cotizador de seguros' />\n\n      <ContenedorFormulario>\n        <Formulario \n          guardarResumen={guardarResumen}\n          guardarCargando={guardarCargando}\n        />\n\n        {cargando ? <Spinner /> : null}\n        \n\n        <Resumen \n          datos={datos}\n        />\n\n        {!cargando ? \n          <Resultado \n            cotizacion={cotizacion}\n          />\n        :\n          null\n        }\n        \n      </ContenedorFormulario>\n\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}