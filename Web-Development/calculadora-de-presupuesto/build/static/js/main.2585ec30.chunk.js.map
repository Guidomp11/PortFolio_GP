{"version":3,"sources":["components/Error.jsx","components/Pregunta.jsx","components/Formulario.jsx","components/Gasto.jsx","components/Listado.jsx","helpers.js","components/ControlPresupuesto.jsx","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","evento","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombregasto","guardarNombreGasto","event","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarpregunta","guardarGastos","creargasto","useEffect","nuevoPresupuesto","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2585ec30.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Error = ({mensaje}) => (\r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n)\r\n\r\nError.propTypes = {    \r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Error;","import React, {Fragment, useState} from 'react';\r\nimport Error from './Error';\r\nimport PropType from 'prop-types';\r\n\r\nconst Pregunta = ({guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n\r\n    //definir el state\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    //funcion que lee el presupuesto\r\n    const definirPresupuesto = evento => {\r\n        guardarCantidad(parseInt(evento.target.value, 10));\r\n    }\r\n\r\n    //submit para definir el presupuesto\r\n    const agregarPresupuesto = evento => {\r\n        evento.preventDefault();\r\n\r\n        if(cantidad < 1 || isNaN(cantidad)){//isNan en caso de no ser numero, entra.\r\n            guardarError(true);\r\n            return;\r\n        }else{\r\n            guardarError(false);\r\n            guardarPresupuesto(cantidad);\r\n            guardarRestante(cantidad);\r\n            actualizarPregunta(false);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Coloca tu presupuesto</h2>\r\n            {error ? <Error mensaje=\"El presupuesto es incorrecto\" /> : null}\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir presupuesto\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nPregunta.propTypes = {\r\n    guardarPresupuesto: PropType.func.isRequired,\r\n    guardarRestante: PropType.func.isRequired,\r\n    actualizarPregunta: PropType.func.isRequired\r\n}\r\n\r\nexport default Pregunta;","import React, {useState} from 'react'\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\nimport PropType from 'prop-types';\r\n\r\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    const [nombregasto, guardarNombreGasto] = useState('');\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const agregarGasto = event => {\r\n        event.preventDefault();\r\n\r\n        if(cantidad < 1 || isNaN(cantidad) || nombregasto.trim() === ''){\r\n            guardarError(true);\r\n            return;\r\n        }else{\r\n            guardarError(false);\r\n        }\r\n\r\n        const gasto = {\r\n            id: shortid.generate(),\r\n            nombregasto, \r\n            cantidad            \r\n        }\r\n\r\n        //pasar nuevo gasto al componente padre\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n\r\n        //resetear el form\r\n        guardarNombreGasto('');\r\n        guardarCantidad(0);\r\n\r\n    }\r\n\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Agrega tus gastos aqu√≠</h2>\r\n\r\n            {error ? <Error mensaje=\"Ambos campos son obligatorios\" /> : null}\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre del Gasto</label>\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombregasto}\r\n                    onChange={event => guardarNombreGasto(event.target.value)}\r\n                />\r\n                <label>Cantidad del gasto</label>\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 300\"\r\n                    value={cantidad}\r\n                    onChange={event => guardarCantidad(parseInt(event.target.value))}\r\n                />\r\n\r\n                <input \r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Agregar gasto\"\r\n                />\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarGasto: PropType.func.isRequired,\r\n    guardarCrearGasto: PropType.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import React from 'react';\r\nimport PropType from 'prop-types';\r\n\r\nconst Gasto = ({gasto}) => (\r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombregasto}\r\n\r\n            <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n        </p>\r\n    </li>\r\n)\r\n \r\nGasto.propTypes = {\r\n    gasto: PropType.object.isRequired\r\n}\r\n\r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropType from 'prop-types';\r\n\r\nconst Listado = ({gastos}) => (\r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n        {gastos.map(gasto => (\r\n            <Gasto \r\n                key={gasto.id}\r\n                gasto={gasto}\r\n            />\r\n        ))}\r\n    </div>\r\n)\r\n \r\nListado.propTypes = {\r\n    gastos: PropType.array.isRequired\r\n}\r\n\r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n\r\n    if((presupuesto / 4) > restante){\r\n        clase = 'alert alert-danger';\r\n    }else if((presupuesto / 2) > restante){\r\n        clase = 'alert alert-warning';\r\n    }else{\r\n        clase = 'alert alert-success';\r\n    }\r\n    return clase;\r\n}","import React, {Fragment} from 'react';\r\nimport {revisarPresupuesto} from '../helpers';\r\nimport PropType from 'prop-types';\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n\r\n            <div className={revisarPresupuesto(presupuesto, restante)}>\r\n                Restante: $ {restante}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropType.number.isRequired,\r\n    restante: PropType.number.isRequired\r\n}\r\n \r\nexport default ControlPresupuesto;","import React, {useState, useEffect} from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\nfunction App() {\n\n  //definir state\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostrarpregunta, actualizarPregunta] = useState(true);\n  const [gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState({});\n  const [creargasto, guardarCrearGasto] = useState(false);\n\n  //useEffect que actualiza el restante\n  useEffect(() => {\n    if(creargasto){\n\n      //agrega el nuevo presupuesto\n      guardarGastos([\n        ...gastos,\n        gasto\n      ]);\n\n      //resta del presupuesot actual\n      const nuevoPresupuesto = restante - gasto.cantidad;\n\n      guardarRestante(nuevoPresupuesto);\n\n      guardarCrearGasto(false);\n    }\n    \n  }, [gasto, creargasto, gastos, restante])\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n\n        <div className=\"contenido-principal contenedor\">\n          \n          {mostrarpregunta ? //carga condicional de componentes\n            (\n              <Pregunta \n                guardarPresupuesto={guardarPresupuesto}\n                guardarRestante={guardarRestante}\n                actualizarPregunta={actualizarPregunta}\n              />\n            )\n          :\n            (\n              <div className=\"row\">\n                <div className=\"one-half column\">\n                  <Formulario \n                    guardarGasto={guardarGasto}\n                    guardarCrearGasto={guardarCrearGasto}\n                  />\n                </div>\n\n                <div className=\"one-half column\">\n                  <Listado \n                    gastos={gastos}\n                  />\n\n                  <ControlPresupuesto \n                    presupuesto={presupuesto}\n                    restante={restante}\n                  /> \n                </div>\n              </div>\n            )\n          }\n          \n\n          \n        </div>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}